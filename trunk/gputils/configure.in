#! /bin/bash

dnl Process this file with autoconf to produce a configure script.

# Initialization
AC_INIT(gpasm/directive.c)
AM_CONFIG_HEADER(config.h)

# Determine the host and build type. The target is always a PIC.
AC_CANONICAL_HOST
AC_CANONICAL_BUILD

# Defaults
GPASM_HEADER_PATH="\$(datadir)/gputils/header"
GPLINK_LKR_PATH="\$(datadir)/gputils/lkr"
GPUTILS_MAJOR_VERSION=0
GPUTILS_MINOR_VERSION=10
GPUTILS_MICRO_VERSION=3
GPUTILS_VERSION=$GPUTILS_MAJOR_VERSION.$GPUTILS_MINOR_VERSION.$GPUTILS_MICRO_VERSION
LIBGPUTILS=libgputils/libgputils.a
LIBIBERTY=libiberty/libiberty.a
MAKE_SUBDIRS="libgputils libiberty gpasm header lkr doc"

# Initialize automake
AM_INIT_AUTOMAKE(gputils, $GPUTILS_VERSION)

# Check for additional parameters
AC_ARG_ENABLE(debug, 
  [  --enable-debug          enable gputils debug features],
  [enable_gputils_debug=yes])    

AC_ARG_ENABLE(gplink,
  [  --disable-gplink        disable the linker],
  [], [enable_gplink=yes])

AC_ARG_ENABLE(gputils,
  [  --disable-gputils       disable the utilities],
  [], [enable_gputils=yes])

AC_ARG_ENABLE(path,
  [  --disable-path          disable adding header path to includes paths],
  [], [enable_gpasm_path=yes])

# Checks for programs.
AC_PROG_CC
AC_PROG_YACC
AM_PROG_LEX
AC_PROG_INSTALL

# append the host alias to the tools for cross compiling
AC_CHECK_TOOL(RANLIB, ranlib, :)
AC_CHECK_TOOL(AR, ar, :)

# Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(malloc.h unistd.h string.h strings.h)

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_STRUCT_TM

# Checks for library functions.
AC_FUNC_ALLOCA
AC_CHECK_FUNCS(strdup strtol strcasecmp stricmp)

# Check for functions to compile into libiberty (getopt is always compiled).
IBERTYOBJS=
AC_CHECK_FUNC(bzero, , [IBERTYOBJS="$IBERTYOBJS bzero.o"])

# Check if host will require an extension on the executable (.exe)
AC_EXEEXT

# Options for the system on which the package will run
case "${host}" in
  *cygwin* )
    if test "x$GCC" = "xyes"; then
      CFLAGS="$CFLAGS -Wall -pedantic"
      LDFLAGS="$LDFLAGS -Wl,-warn-common -Wl,-warn-once"
    fi
    ;;
  *linux* )
    if test "x$GCC" = "xyes"; then
      CFLAGS="$CFLAGS -Wall -pedantic"
      LDFLAGS="$LDFLAGS -Wl,-warn-common -Wl,-warn-once"
    fi
    ;;
  *sun* )
    # sunos cc needs the -xCC flag for // comments
    if test "x$GCC" != "xyes"; then
      CFLAGS="$CFLAGS -xCC" 
    fi
    ;;
  *mingw* )
    CFLAGS="-O2"
    ;;
esac

# Add extra gcc flags when configuring 
CFLAGS="$CFLAGS $XTRA_CFLAGS"

# Process the options
if test x$enable_gplink = xyes; then
  MAKE_SUBDIRS="$MAKE_SUBDIRS gplink"
fi

if test x$enable_gputils = xyes; then
  MAKE_SUBDIRS="$MAKE_SUBDIRS gputils"
fi

if test x$enable_gputils_debug = xyes; then
  AC_DEFINE(__DEBUG__, 1, 
    [Define if you want to enable GPUTILS debug features. ])
fi

if test x$enable_gpasm_path = xyes; then
  AC_DEFINE(USE_GPASM_HEADER_PATH, 1, 
    [Define if you want to add the header path to the include paths list. ])
fi

if test x$MINGW32 = xyes; then
  AC_DEFINE(__MSDOS__, 1, 
    [Define if you are cross compiling to an MSDOS system. ])
fi

# Substitute configuration variables
AC_SUBST(GPASM_HEADER_PATH)
AC_SUBST(GPLINK_LKR_PATH)
AC_SUBST(GPUTILS_MAJOR_VERSION)
AC_SUBST(GPUTILS_MINOR_VERSION)
AC_SUBST(GPUTILS_MICRO_VERSION)
AC_SUBST(GPUTILS_VERSION)
AC_SUBST(IBERTYOBJS)
AC_SUBST(LIBGPUTILS)
AC_SUBST(LIBIBERTY)
AC_SUBST(MAKE_SUBDIRS)

# Generate Makefiles
AC_OUTPUT(Makefile 
          doc/Makefile 
          gpasm/Makefile 
          gplink/Makefile 
          gputils/Makefile 
          header/Makefile 
          libgputils/Makefile 
          libiberty/Makefile 
          lkr/Makefile)

AC_MSG_RESULT([

gputils-$GPUTILS_VERSION is now configured for $canonical_host_type

  Build:                $build
  Host:                 $host
  Source directory:     $srcdir
  Installation prefix:  $prefix
  C compiler:           $CC $CFLAGS

])
