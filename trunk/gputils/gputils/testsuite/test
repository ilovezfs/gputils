#!/bin/bash

#   tests gpdasm
#   Copyright (C) 2001, 2002, 2003
#   Craig Franklin
#
# This file is part of gputils.
#
# gputils is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# gputils is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with gputils; see the file COPYING.  If not, write to
# the Free Software Foundation, 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.  

# Defines
TESTDIR=./test
GPDASMBIN=../gpdasm
GPASMBIN=../../gpasm/gpasm
GPASMFLAGS=-q

# General functions

function testfailed() {
  echo "TEST FAILED $1"
  exit 1
}

function binexists() {
  # Test syntax.
  if [ $# = 0 ]; then
    echo "Usage: binexists {program}"
    return 1
  fi
  echo "Testing for $1:"
  if [ ! -e $1 ]; then
    echo "$1 not found, aborting."
    return 1
  else
    $1 -v
    echo -e "Executable found.\n"
    return 0
  fi
}

function printbanner() {
  # Test syntax.
  if [ $# = 0 ]; then
    echo "Usage: printbanner {message}"
    return 1
  fi
  echo -e "+----------------------------------------------------------
|   $1
+----------------------------------------------------------\n"
  return 0
}

function run_test() {
  # Test syntax.
  if [ $# -lt 1 ]; then
    echo "Usage: run_test <test file> <mcu type>"
  fi
  ../../$GPASMBIN $GPASMFLAGS $1.asm || testfailed "$GPASMBIN $GPASMFLAGS $1.asm"
  ../../$GPDASMBIN -p $2 -s $1.hex > $1.dis || testfailed "$GPDASMBIN -p $2 -s $1.hex"
  ../../$GPASMBIN $GPASMFLAGS -o $1.dis.hex $1.dis || testfailed "$GPASMBIN $GPASMFLAGS -o $1.dis.hex $1.dis"
  diff -us $1.hex $1.dis.hex || testfailed ""
}

  printbanner "Start of gpdasm testing" 
  # Test for executable.
  binexists $GPDASMBIN
  RETVAL=$?
  [ $RETVAL -eq 1 ] && exit 1
  # Testing gpdasm requires gpasm.
  binexists $GPASMBIN
  RETVAL=$?
  [ $RETVAL -eq 1 ] && exit 1

  # Create the test directory if it doesn't already exist.
  cd gpdasm.project
  [ -d $TESTDIR ] || mkdir $TESTDIR || exit 1
  # Copy the test files to the test directory.
  cd $TESTDIR
  # Clean the directory.
  rm -Rf *
  cp ../*.asm .

  printbanner "Testing 12 bit core"
  run_test op12 12c508
  echo -e "12 bit core passed.\n"

  printbanner "Testing sx core"
  run_test sx sx18
  echo -e "sx core passed.\n"

  printbanner "Testing 14 bit core"
  run_test op14 16c84
  echo -e "14 bit core passed.\n"

  printbanner "Testing enhanced 14 bit core"
  run_test op14e 12f1501
  echo -e "Enhanced 14 bit core passed.\n"

  printbanner "Testing 16 bit core"
  run_test op16 17c44
  echo -e "16 bit core passed.\n"

  printbanner "Testing extended 16 bit core"
  run_test op16e 18c452
  echo -e "Extended 16 bit core passed.\n"

  printbanner "gpdasm testing sucessful"
